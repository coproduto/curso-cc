{"componentChunkName":"component---src-templates-post-template-tsx","path":"/estruturas-de-dados/index.html","result":{"data":{"markdownRemark":{"html":"<h2>O que são estruturas de dados? Onde vivem? De que se alimentam?</h2>\n<p>O exercício da programação pode ser pensado fundamentalmente como\numa forma de manipulação de informação. Mais especificamente, todo\nprograma tem o objetivo de implementar alguma <strong>computação</strong>: Uma\ntransformação de algum dado de entrada em algum dado de saída.</p>\n<p>Todavia, a computação que um programa implementa pode ser arbitrariamente\ncomplexa e exigir qualquer número de computações intermediárias.</p>\n<p>Alguns exemplos:</p>\n<ul>\n<li>Em um banco de dados, ao responder a um pedido, podemos precisar percorrer\ngrande quantidade de dados armazenados para construir a resposta.</li>\n<li>Em um compilador, precisamos saber todas as variáveis que existem em um\ndeterminado ponto do programa para gerar o código de saída corretamente.</li>\n<li>Em um sistema web, podemos precisar combinar dados armazenados em vários\nbancos de dados diferentes para construir uma resposta.</li>\n<li>Em um jogo, é necessário, a cada novo frame, percorrer o estado de dezenas\nde objetos com os quais o jogador pode interagir.</li>\n<li>Em um sistema estatístico, precisamos armazenar dados de várias observações\nde algum conjunto de variáveis e depois percorrê-los para extrair dados\nagregados dessas observações.</li>\n</ul>\n<p>O que todos os exemplos dados têm em comum é que, para executar nossa\ncomputação, precisamos de uma forma de armazenar informações para\nposteriormente acessá-las.</p>\n<p>Não apenas isso, mas precisamos que esse acesso seja feito de forma\n<strong>eficiente</strong>:</p>\n<ul>\n<li>Se o banco de dados demorar demais para percorrer as informações armazenadas,\ntodo o sistema que depende dele irá demorar para responder.</li>\n<li>Se o compilador demorar para checar se uma variável existe ou não, a\ncompilação do seu programa irá demorar horas.</li>\n<li>Se o sistema web demorar para buscar os dados, o cliente que acessa ele\n(seja uma página web, um app ou outro sistema) irá deixar seu usuário esperando.</li>\n<li>Se o jogo demorar para calcular todas as interações do jogador, nunca iremos\natingir aqueles deliciosos 60 FPS.</li>\n<li>Se o sistema estatístico demorar para percorrer os dados, o pobre do cientista\nvai passar um tempão esperando os resultados do seu modelo.</li>\n</ul>\n<p>A solução de todas essas questões passa pelas estruturas de dados. Uma estrutura\nde dados define um formato de armazenamento, gestão e organização de dados que\npermite que acesso e modificação eficientes.</p>\n<p>Não existe uma única estrutura de dados que resolva todos os casos de uso.\nPara cada padrão de acesso à informação, é necessária uma forma diferente de\narmazenamento. Muita vezes não existe um único formato que seja \"o melhor\" -\né necessária uma análise cuidadosa dos prós e contras de cada representação.</p>\n<p>Iremos analisar diversas estruturas de dados para entender os prós e contras\nde cada uma e quando o uso de cada uma é adequado.</p>\n<ul>\n<li><a href=\"#\">Listas encadeadas (EM CONSTRUÇÃO)</a></li>\n</ul>","frontmatter":{"slug":"estruturas-de-dados/index.html","title":"Estruturas de dados"}}},"pageContext":{"slug":"estruturas-de-dados/index.html"}}}